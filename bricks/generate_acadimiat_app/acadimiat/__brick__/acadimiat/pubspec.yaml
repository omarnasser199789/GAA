name: acadmiat
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.17.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  #  flutter_svg: This library provides a way to display SVG images in Flutter apps.
  flutter_svg:

  #  shimmer: This library provides a widget that displays a shimmering effect as a placeholder for content that is still loading.
  shimmer: ^3.0.0

  #  percent_indicator: A Flutter library for displaying progress indicators in various forms, such as circular or linear progress bars, with customizable styles and animations.
  percent_indicator: ^4.2.3

  #  flutter_bloc and equatable: These packages provide support for the BLoC (Business Logic Component) pattern,
  #  which is a state management approach for Flutter apps. equatable provides a way to compare objects for equality.
  flutter_bloc: ^7.0.1
  equatable: ^2.0.5

  # jiffy: A date and time manipulation library for Dart, which allows you to easily parse, manipulate, and format dates and times in various formats.
  jiffy: ^5.0.0

  #  open_filex: This package provides a way to open files of different types using their default applications.
  open_filex: ^4.3.4

  #  url_launcher: This library provides an easy way to launch URLs in the device's default browser or other apps.
  url_launcher: ^6.2.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  #  flutter_folding_card: A Flutter widget for implementing folding cards in your application, which can be useful for displaying complex information or data in a compact and interactive manner.
  flutter_folding_card: ^1.1.0

  #  country_code_picker: ^3.0.0 - A Flutter plugin to select a country code.
  #  It provides a widget to select a country code from a list of countries.
  country_code_picker: ^3.0.0

  #  share_plus: This library provides a simple way to share content from Flutter apps.
  #  It includes support for sharing text, files, and URLs.
  share_plus:

  #  image_picker: A Flutter plugin for picking images from the device's gallery or camera, with support for various image formats and options.
  image_picker: ^1.0.5

  #  image_cropper: A Flutter plugin for cropping images, which can be useful for implementing user avatars or other image-based features in your application.
  image_cropper: ^4.0.1

  #  shared_preferences: A Flutter plugin for storing and retrieving key-value pairs on the device, which can be useful for implementing simple persistent storage in your application.
  shared_preferences: ^2.2.2

  #  measure_size: A widget that allows you to measure the size of any other widget in your Flutter application, which can be useful for implementing dynamic layouts.
  measure_size: ^3.0.1

  #  better_player: This library provides a video player widget with support for features like subtitles, playlists, and more.
  better_player: ^0.0.83

  #  image: This library provides functionality for working with images in Flutter.
  #  It includes support for loading and manipulating images.
  image: ^4.1.3

  #  flutter_widget_from_html: This library provides a widget for rendering HTML in Flutter apps.
  flutter_widget_from_html:

  #  http: This package provides a way to make HTTP requests and handle responses.
  http:

  # path_provider: This package provides a way to access common storage locations on the device, such as the application's cache directory or external storage directory.
  path_provider: ^2.1.1

  #  comment_tree: This library provides a widget for displaying threaded comment threads in Flutter apps.
  comment_tree: ^0.3.0

  # dartz: This package provides functional programming constructs such as Option and Either.
  dartz: ^0.10.1

  #  curved_navigation_bar: This library provides a customizable navigation bar widget with smooth animation curves.
  curved_navigation_bar: ^1.0.3

  #  flutter_mentions: This library provides a widget that allows users to mention others in a text field, similar to the feature in social media platforms.
  flutter_mentions: ^2.0.1

  #  signalr_core: This package provides support for real-time communication using SignalR, a library for building real-time web applications.
  signalr_core: ^1.1.1

  #  carousel_slider: This library provides a simple carousel widget for Flutter.
  #  It includes support for customizing the carousel's appearance and behavior.
  carousel_slider: ^4.2.1

  #  screen_protector: This library provides a widget that can be used to protect the screen of a Flutter app from being accidentally touched.
  screen_protector: ^1.4.2

  #  favorite_button: A Flutter button widget that can be used to implement a favorite/like button in your application, with customizable icons and animations.
  favorite_button: ^0.0.4

  #  animation_wrappers: A collection of animation widgets for Flutter, which can be used to add various animations to your application, such as page transitions, fade-ins, and spinners.
  animation_wrappers: ^3.0.0

  #  draggable_scrollbar: This package provides a scrollbar widget that can be dragged to quickly navigate a long list of items.
  draggable_scrollbar: ^0.1.0

  #  file_picker: A Flutter plugin for picking files from the device's storage, with support for various file formats and options.
  file_picker:

  #  awesome_notifications: This package provides a way to display local and scheduled notifications in a customizable way.
  awesome_notifications: ^0.8.2

  #  permission_handler: This package provides a way to request and check permissions for various system resources, such as the camera or microphone.
  permission_handler:

  #  get_it: This package provides a simple way to implement dependency injection in Flutter.
  get_it: ^7.6.4

  #  dio: This library is a powerful HTTP client for Flutter that supports a variety of features, including file uploads, download progress tracking, and more.
  dio: ^5.4.0

  #  pin_code_fields: ^7.4.0 - A Flutter widget to input pin code.
  #  It provides a simple way to input a pin code with a customizable interface.
  pin_code_fields: ^8.0.1

  #  advance_notification: ^1.0.6 - A Flutter plugin to show advanced notifications.
  #  It allows users to customize notification layouts and add actions to notifications.
  advance_notification: ^1.0.6

  #  showcaseview: ^2.0.0+1 - A Flutter plugin to display showcase views.
  #  It provides a way to highlight specific parts of the app to the user.
  showcaseview: ^2.0.3

  #  remedi_vimeo_player: This library provides a widget for playing Vimeo videos in Flutter apps.
  remedi_vimeo_player: ^0.1.1

  in_app_review: ^2.0.8
  package_info: ^2.0.2
  app_version_update_lite: ^4.0.4
  purchases_flutter: ^4.12.0
  flutter_inappwebview: 6.0.0-beta.22

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_launcher_icons: ^0.13.1
  flutter_dotenv: ^5.1.0


flutter_icons:
  android: true
  ios: true
  image_path: "assets/logo.png"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  uses-material-design: true
  assets:
    - .env
    - .dev_env
    - assets/
    - assets/images/
    - assets/fonts/
    - assets/svgs/
    - assets/gifs/

#  This is a YAML code block that defines two fonts, "taleeq-bold" and "taleeq-regular", along with their respective font files.
#
#  The first font, "taleeq-bold", is defined with a family name of "taleeq-bold" and its font file is located at "assets/fonts/taleeq-bold.ttf".
#
#  The second font, "taleeq-regular", is defined with a family name of "taleeq-regular" and its font file is located at "assets/fonts/taleeq-regular.ttf".
#
#  This YAML code block could be used in a configuration file for a website or application to specify which fonts should be used for different styles of text.
  fonts:
    - family: taleeq-bold
      fonts:
        - asset: assets/fonts/taleeq-bold.ttf

    - family: taleeq-regular
      fonts:
        - asset: assets/fonts/taleeq-regular.ttf
